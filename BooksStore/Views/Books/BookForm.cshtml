@using Mvc.Placeholders.Helpers

@model BooksStore.Models.Book
@{
    ViewBag.Title = "BookForm";
}
@if (Model == null || Model.Id == 0)
{
    <h2>Add new book</h2>
}
else
{
    <h2> Edit your book</h2>
}

@using (Html.BeginForm("Save", "Books"))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    if (Model != null)
    {
        @Html.HiddenFor(m => m.Id)
    }

    <div class="form-group">
        @Html.LabelFor(m => m.CoverUrl)
        @Html.EditorFor(m => m.CoverUrl, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.CoverUrl, "", new { @class = "text-danger" })

    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Author)
        @Html.EditorFor(m => m.Author, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Author, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Year)
        @Html.EditorFor(m => m.Year, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Year, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Month)
        @Html.EditorFor(m => m.Month, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Month, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Price)
        @Html.EditorFor(m => m.Price, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
    </div>

    <input type="submit" value="Save" class="tiny button" />
}
